name: Django CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8
        run: flake8 .

  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set environment variables for testing
        env:
          TESTING: '1'
        run: echo "TESTING=1" >> $GITHUB_ENV

      - name: Run migrations
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TESTING: '1'
        run: python manage.py migrate

      - name: Run tests
        env:
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
        run: python manage.py test --noinput

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Create .env file
        run: |
          touch .env
          echo '"${{ secrets.SECRET_KEY }}"' | sed "s/\"//g" > .env

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/online-training:latest .
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/online-training-nginx:latest nginx/.
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/online-training:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/online-training-nginx:latest

  run_server:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - name: Verify Docker Hub images
        run: |
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/online-training:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/online-training-nginx:latest

      - name: Add SSH Key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_PRIVATE }}

      - name: Run Commands via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -vT ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR }}
            sudo docker compose down
            sudo docker container prune -f
            sudo docker compose up -d --build
          EOF
